name: Release

on:
  release:
    types:
      - published

env:
  CARGO_TERM_COLOR: always

jobs:
  get_release_asset_upload_url:
    runs-on: ubuntu-latest
    outputs:
      asset_upload_url: ${{ steps.get_upload_url.outputs.upload_url }}
    steps:
      - name: Get release asset upload URL
        id: get_upload_url
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          UPLOAD_URL=$(gh api -H "Accept: application/vnd.github+json" /repos/ryboe/gitprompt/releases/tags/${{ github.ref_name }} | jq -r '.upload_url')
          echo "::set-output name=upload_url::$UPLOAD_URL"

  upload_linux_assets:
    runs-on: ubuntu-latest
    needs:
      - get_release_asset_upload_url
    strategy:
      matrix:
        target:
          - aarch64-unknown-linux-gnu
          - aarch64-unknown-linux-musl
          - riscv64gc-unknown-linux-gnu
          # - riscv64gc-unknown-linux-musl  # TODO: uncomment when rust stdlib is available for riscv-musl
          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
      - name: Install ARM64 gcc backend if necessary
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt update
          sudo apt install -y --no-install-recommends gcc-aarch64-linux-gnu
      - name: Install musl if necesary
        if: endsWith(matrix.target, '-musl')
        run: |
          sudo apt update
          sudo apt install -y --no-install-recommends musl-tools
      - name: Build Linux release binary
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}
          use-cross: ${{ ! startsWith(matrix.target, 'x86_64-') }}
      - name: Upload binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.get_release_asset_upload_url.outputs.asset_upload_url }}
          asset_name: gitprompt-${{ matrix.target }}
          asset_path: target/${{ matrix.target }}/release/gitprompt
          asset_content_type: application/octet-stream

  upload_mac_assets:
    runs-on: macos-latest
    needs:
      - get_release_asset_upload_url
    strategy:
      matrix:
        target:
          - aarch64-apple-darwin
          - x86_64-apple-darwin
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
      - name: Build macOS release binary
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}
      - name: Upload binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.get_release_asset_upload_url.outputs.asset_upload_url }}
          asset_name: gitprompt-${{ matrix.target }}
          asset_path: target/${{ matrix.target }}/release/gitprompt
          asset_content_type: application/octet-stream

  upload_windows_assets:
    runs-on: windows-latest
    needs:
      - get_release_asset_upload_url
    strategy:
      matrix:
        target:
          - aarch64-pc-windows-msvc
          - x86_64-pc-windows-msvc
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
      - name: Build Windows release binary
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}
      - name: Upload binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.get_release_asset_upload_url.outputs.asset_upload_url }}
          asset_name: gitprompt-${{ matrix.target }}
          asset_path: target/${{ matrix.target }}/release/gitprompt
          asset_content_type: application/octet-stream
