name: Release

on:
  release:
    types:
      - published

env:
  CARGO_TERM_COLOR: always

jobs:
  build_linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - aarch64-unknown-linux-gnu
          - aarch64-unknown-linux-musl
          - riscv64gc-unknown-linux-gnu
          # - riscv64gc-unknown-linux-musl  # TODO: uncomment when rust stdlib is available for riscv-musl
          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
      - name: Install ARM64 gcc backend if necessary
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt update
          sudo apt install -y --no-install-recommends gcc-aarch64-linux-gnu
      - name: Install musl if necesary
        if: endsWith(matrix.target, '-musl')
        run: |
          sudo apt update
          sudo apt install -y --no-install-recommends musl-tools
      - name: Build Linux release binary
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}
          use-cross: ${{ ! startsWith(matrix.target, 'x86_64-') }}
      # - name: Strip binary
      #   run: |
      #     sudo apt install -y --no-install-recommends binutils
      #     strip --strip-all target/${{ matrix.target }}/release/gitprompt
      - name: Upload binary
        uses: actions/upload-artifact@v3
        with:
          name: gitprompt-${{ matrix.target }}
          path: target/${{ matrix.target }}/release

  build_mac:
    runs-on: macos-latest
    strategy:
      matrix:
        target:
          - aarch64-apple-darwin
          - x86_64-apple-darwin
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
      - name: Build macOS release binary
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}
      # - name: Strip binary
      #   run: strip -s target/${{ matrix.target }}/release/gitprompt
      - name: Upload binary
        uses: actions/upload-artifact@v3
        with:
          name: gitprompt-${{ matrix.target }}
          path: target/${{ matrix.target }}/release

  build_windows:
    runs-on: windows-latest
    strategy:
      matrix:
        target:
          - aarch64-pc-windows-msvc
          - x86_64-pc-windows-msvc
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
      - name: Build Windows release binary
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}
      - name: Upload binary
        uses: actions/upload-artifact@v3
        with:
          name: gitprompt-${{ matrix.target }}
          path: target/${{ matrix.target }}/release
